// Code generated by fileb0x at "2019-01-27 10:32:04.474075074 +0000 GMT m=+0.006360549" from config file "b0x.yaml" DO NOT EDIT.
// modification hash(4bbca84c1988d2187906f362b9dc5d42.7fcf2224b1cfc0684a5d34c6f2d8c3ed)

package static


import (
  "bytes"
  "compress/gzip"
  "context"
  "io"
  "net/http"
  "os"
  "path"


  "golang.org/x/net/webdav"


)

var ( 
  // CTX is a context for webdav vfs
  CTX = context.Background()

  
  // FS is a virtual memory file system
  FS = webdav.NewMemFS()
  

  // Handler is used to server files through a http handler
  Handler *webdav.Handler

  // HTTP is the http file system
  HTTP http.FileSystem = new(HTTPFS)
)

// HTTPFS implements http.FileSystem
type HTTPFS struct {
	// Prefix allows to limit the path of all requests. F.e. a prefix "css" would allow only calls to /css/*
	Prefix string
}



// FileAssetsGraphsJs is "assets/graphs.js"
var FileAssetsGraphsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xcc\x56\x5b\x6f\xe3\x36\x13\x7d\xcf\xaf\x98\x8f\xbb\x80\xe5\xac\x20\xcb\xc9\x3a\x17\x05\xfe\x8a\x26\x9b\x2c\x5a\x34\xc0\xa2\x71\x8a\x16\x69\x1e\x68\x69\xec\xb0\xa1\x48\x83\xa4\x12\xbb\x81\xfe\x7b\x41\x8a\xba\xf8\x86\x5d\x2c\xfa\x50\xf8\xc1\xe0\xcc\x1c\xf2\x90\x3c\x47\x9c\xf7\xc1\xac\x10\xa9\x61\x52\x40\xd0\x87\xb7\x03\x80\x57\x26\x32\xf9\x1a\x65\x0b\x0d\x63\x78\x78\xbc\x68\x43\xcb\xdf\x28\x87\x31\x0c\x3b\xa1\x55\x15\x8a\x3b\xa1\x62\x91\x51\x83\x3f\x09\x83\xea\xa5\x4e\x1e\x00\xbc\x8f\xe8\x5f\x74\x19\xd8\x15\x00\xcc\x6a\x81\x09\xf4\x3e\x5f\x4f\x7a\xa1\x0b\x14\x8a\x27\xd0\x1b\x30\x8f\xf2\xd1\x54\xe6\x0b\x8e\x06\x13\x68\x49\x2a\xd4\x0b\x29\x34\x4e\x70\x69\x2a\xc2\x55\xa5\xd0\x92\x63\xc4\xe5\x7c\xbd\xc2\xe7\xf7\x71\x5b\x50\xa5\xf1\x86\x4b\x6a\xd6\x60\xd1\xf6\x1c\xe5\x01\x40\xd9\x77\x5b\xf1\x93\xe5\x98\xfb\x43\x7a\x83\x65\x02\x71\x08\xab\x04\x62\x28\xdd\x91\xbd\x50\x05\x5a\xa6\xcf\x68\x60\x0c\x4c\x06\x15\xf2\x8a\x8a\x17\xaa\x7f\xbe\x8b\x68\x96\x5d\x49\x2e\xd5\x1d\x9a\x80\xa4\x85\x36\x32\xaf\xc7\x24\x84\x07\xb7\x22\x79\x77\x7c\x7e\x3c\x3b\x39\x26\xa1\x1f\xe2\x28\x3b\xbb\x8c\x9b\xe1\x6c\x36\x3d\x3e\x39\x6d\x87\xe7\x67\x1f\x4f\x86\xcd\x30\x3b\x3f\x39\x1f\xcd\x5a\x6c\x3c\x3a\x1b\xc5\xe4\x00\xe0\x71\x73\x13\xf7\x9a\xce\x11\xc6\x20\xf0\xb5\x25\x78\xf5\x44\x95\x09\x48\x9d\x26\xa1\x3f\x6a\x2a\x58\x4e\xed\x4d\x5c\x0b\x3a\xe5\x98\x25\x60\x54\x81\xe1\x7a\xae\x1b\xf4\x27\xc9\x5e\xb0\x1b\x9d\xd2\xf4\x79\xae\x64\x21\xaa\x63\x48\x80\x18\x45\x85\x5e\x50\x85\xc2\x78\xd2\x74\xc9\xf4\xef\x49\x73\xc5\x9c\x4e\x91\xdf\x48\x61\x6a\xc4\xbb\xd3\xa1\xfd\xf9\x6a\x00\xce\x04\x36\x39\x7a\x64\x7f\x4d\xce\xb0\xf4\x79\xff\x4a\x36\x6f\x38\x26\x40\x26\x2c\x47\x08\x34\xa6\x52\x64\xfa\x87\x3e\xf1\xe9\x4a\x01\x2d\xad\x3f\x5a\x5a\x73\xc5\xb2\xc9\x13\x4b\x9f\x05\x6a\x6d\x55\xf0\x6f\xd3\xdd\xcc\xe5\x4c\xb0\xbc\xc8\x13\x38\xda\x24\x7f\x8b\xb9\x54\x2b\xb8\xd7\x98\x41\x70\x7b\xe9\xd9\x7b\xda\x46\x4a\x3e\x61\x8b\x04\xde\x20\x95\x4a\xa0\xfa\x95\x66\xac\x70\x8c\x61\x26\x85\xb9\x33\x2b\x37\x89\x90\x2a\xa7\x9c\xd4\xb0\x8c\x1a\x9a\x58\x85\xa7\x35\x9d\xab\x4f\xa3\xd3\x8f\x31\x09\xbd\x89\x89\xdd\x07\x09\x5d\xe1\x17\xc9\x84\xd1\x09\x58\x5b\x94\x8f\xde\x30\x5b\x52\x8b\x14\x8a\x0c\x55\xb0\x91\xbb\x33\xd4\xe8\xfd\x32\x74\xe9\x6d\x19\x7e\x2a\x94\x97\xdc\x4e\x8b\x87\x5f\x15\xed\xb7\x28\x31\xf5\xd6\x4c\x60\xcb\xab\xdf\xa7\xd4\xba\xe0\x8e\xfd\x8d\x09\x0c\xcf\xba\x9a\xd8\x25\x26\xab\x87\x9d\x22\xfb\x0e\xc9\xff\x27\xb5\x1c\xef\xd1\xf2\x96\x8c\xbd\x1e\x7d\x75\x4d\x1c\x80\x89\x0c\x97\xbf\x7c\x8d\xe7\x66\xdd\x0d\xcd\x19\x5f\xd9\x6b\xa5\x9c\x4d\x15\xdb\x5b\xb8\x79\x51\xdd\xfc\x17\x4e\x53\xcc\x51\x58\x79\xc8\xc2\x68\x96\xe1\x9e\x79\x54\x4e\x8d\x41\xd5\x7d\xce\xb0\xdf\xd9\x84\xfd\x5a\x9a\x42\x09\xc0\xa8\xb1\x53\xb4\x8a\x8c\xbc\x61\x4b\xcc\x82\x51\x1f\x3e\x00\x81\xdb\x4b\x72\xd1\x40\xca\x76\x25\xef\xc7\x29\x55\x9d\xe5\xbb\xb6\x5c\x7b\xb7\x7c\x45\xe9\xfe\x77\x79\xd5\x19\x6e\xcd\xab\x83\x43\xff\xb0\x55\x1e\x73\xde\x84\x71\xb3\x99\xa0\xde\xca\xda\x53\xef\xdf\x76\x32\x47\x63\xb9\xb4\xb2\xa8\xd8\x7e\xbe\x9e\x34\x21\x5d\xa4\xa9\x13\x5e\x33\xa3\x45\xf4\xe1\x2d\xe8\x1f\x0e\x5a\x6e\x1a\x8d\xfd\x4c\xcb\xc2\x6c\xf4\x2e\x6e\x9a\xea\xd1\x8d\xa4\x08\x7a\x39\xe6\xa0\xed\x2e\x7a\x61\xe7\xc4\x73\x3d\xdf\xdd\x37\x10\x6d\x8a\xd9\xec\x7f\xa4\xee\x19\xdc\x13\x6e\x43\x30\x86\x5c\xcf\x23\xbd\xe0\xcc\x04\xe4\x4f\x41\xfa\x17\xeb\x6d\x85\xef\x82\x3a\xcd\x84\xc3\x3d\xc4\x8f\x4d\x65\xb6\xd0\xd1\xa2\xd0\x4f\x81\xeb\x15\x6c\x27\xe5\xda\x05\x87\x2c\x9b\x2a\x36\x83\xa0\xdb\x6c\xfd\x1f\x8e\xe2\xae\x40\xda\xde\x2c\xd2\x4f\x6c\x66\x82\x06\x59\xae\x33\xaa\xee\xd8\x51\x4e\x31\x88\x43\xf0\x01\x8e\x62\x6e\x9e\x36\xf9\xfb\xa4\xe3\xd7\xac\xf5\x66\xf9\xed\xda\x52\x58\x7d\x0f\x12\x20\xf7\x9a\x89\x39\xe9\x6a\x70\x37\x68\xd8\x05\xfd\xc8\xb9\x4c\xa9\xc1\xec\x1b\x80\x47\x5d\xe0\x15\x47\x2a\x1c\xcc\xa3\x76\x6c\x63\xfb\x81\x59\xcf\x6f\x8a\x7a\xbd\xc0\x9d\xf9\x87\xf1\x9e\x6e\x71\x00\xc3\x38\x8e\xab\x39\xab\x2b\x2b\x43\x17\xaa\xcc\x31\x28\x9d\x45\x6c\xa6\xbc\x70\x7a\x75\x7e\xd1\x68\xea\x19\x82\x2d\xa7\x78\xb1\x62\xce\x4c\x25\xd7\x39\x9a\x5e\xe8\xcc\x42\xea\x15\x76\x92\x71\xc9\xc3\xc1\x81\x5d\xed\x9f\x00\x00\x00\xff\xff\xc2\xe6\x1e\xdc\xc3\x0b\x00\x00")

// FileAssetsStyleCSS is "assets/style.css"
var FileAssetsStyleCSS = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xd4\x53\x5d\x8e\xa4\x38\x0c\x7e\xdf\x53\xb0\x2a\xad\xb4\x2b\x75\x50\xe8\xae\x62\xa7\xc3\xcb\x1c\x60\xde\x46\x73\x00\x43\x0c\xe5\x69\x88\xa3\xc4\x54\xd3\x83\xb8\xfb\x88\x2a\xa8\xa6\xfa\xe7\x00\xc3\x03\x32\xd8\xfe\xfc\xf9\xcb\x97\x92\xed\xcb\x58\x42\xf5\xd4\x04\xee\x9d\x55\x15\xb7\x1c\xcc\xae\xae\xeb\xa2\x66\x27\xaa\x86\x8e\xda\x17\xf3\x0d\x84\xef\x22\xb8\xa8\x22\x06\x5a\x72\x91\x7e\xa1\xc9\xf6\x7e\x28\x3c\x58\x4b\xae\x51\xc2\xde\xe4\x7b\x3f\x4c\xbb\x23\x82\xc5\xf0\x01\xf2\xc3\x7e\xff\x78\xc0\xe2\x88\xd4\x1c\xe5\x5c\x5c\x74\x10\x1a\x72\xaa\x64\x11\xee\x8c\x5e\xd1\xe6\x88\x23\x09\xb1\x33\x35\x0d\x68\x57\xd4\x24\xad\xd8\x09\x90\xc3\xa0\xea\xb6\x27\x3b\xae\x1d\x5f\x5e\x47\x27\xa9\x83\x53\x09\x41\x2d\x4c\x2e\x43\x8c\xbe\xe6\x77\x91\x2c\xce\x05\xc2\x4d\xd3\xa2\x2a\x7b\x11\x76\xe3\x46\x80\xaa\x0f\x91\x83\xf1\x4c\x4e\x30\x14\x96\xa2\x6f\xe1\xc5\x90\x6b\xc9\xa1\x2a\x5b\xae\x9e\xb6\x42\xfc\x7f\x5d\xc5\xe8\x24\x3b\xbc\xca\x62\xb2\x7b\x3f\x24\xf9\x96\x5b\x19\xc0\xd9\xf1\x43\xc4\x9b\xa6\x2c\x9f\x5f\x73\xa4\xdf\x34\x27\x30\xbe\x3d\xab\x33\x8d\xfb\x59\xd1\x33\xdc\x22\x71\x56\x08\x0e\xa2\x2c\x56\x1c\xe0\x2c\xa6\x63\x87\x53\x7a\xbb\xfe\x95\xcb\x9c\xfc\x9b\x3a\xcf\x41\xc0\xc9\x94\x7a\x68\x50\xcd\x7a\xa3\x93\xb5\x76\x39\xb0\x16\x6b\x31\xe4\x8e\x18\x48\x36\x2d\x5f\x3b\xb4\x04\xff\x76\xe4\xd4\x33\x59\x39\x9a\x2c\xd7\xda\x0f\xff\x8d\xab\xe2\x37\xb3\x3e\x25\x72\x56\x63\x03\x3b\xed\x3a\xec\xbe\x0b\x48\xbc\x9b\xa3\x1f\x11\x1a\x1c\x97\x1d\xef\x0f\xda\x0f\x53\x5a\x41\xb0\xef\x2d\xb7\x30\x2c\x4a\x0e\x16\x83\xd1\x97\x3a\x25\x24\x2d\x8e\x97\x9f\xab\xf7\x32\x3f\x24\x91\x5b\xb2\x57\x47\xaf\x09\xed\x87\xad\xc8\xf9\xfa\xf9\x7c\x21\xf0\xa0\xf5\xb4\x0b\x78\x42\xd7\xa3\x12\x68\xee\xd2\xaa\x8f\xc2\xdd\x1c\x7f\x70\x09\xec\x63\xfe\x78\xa8\x17\x46\x2a\x80\xa5\x3e\x1a\x7d\x83\xb8\xd7\xba\x38\x61\x10\xaa\xa0\x55\xd0\x52\xe3\x8c\xb0\x9f\xb6\xb8\x1b\xef\x69\xfd\xcf\xb4\x3b\x51\x24\xe1\x10\x55\x75\x84\x20\x6a\x1e\xbb\xba\x7a\x35\x55\xfa\x10\xb0\x4b\xd2\x3c\x60\xf7\xae\x7e\x86\xbc\x5e\x38\x28\x23\xb7\xbd\xe0\x2c\x96\x3b\x41\xfc\xb9\x56\x55\x01\x2d\xc9\x67\x76\x49\xfe\xdc\xe7\xaf\xdf\x01\x00\x00\xff\xff\xb1\xa1\x83\xf0\x0b\x05\x00\x00")

// FileIndexHTML is "index.html"
var FileIndexHTML = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xbc\x55\xdf\x8f\xe3\x34\x10\x7e\x6e\xa5\xfe\x0f\x3e\xf3\x7a\xb6\xdb\x6e\x11\xe8\x2e\x29\x42\x77\xf7\x80\x04\x02\x09\x4e\x82\xc7\xa9\x3d\x4d\xdc\x75\xec\x9c\xc7\x6d\xb7\x42\xfc\xef\xc8\x49\x76\x93\x2d\xbb\xd2\x2d\xa0\xeb\x43\xeb\xf9\xf5\xcd\x7c\xf5\x97\x49\xf1\xea\xfd\xcf\xef\x7e\xfb\xe3\x97\x0f\xac\x4e\x8d\xdb\x2e\xe6\x45\xfe\x65\x0e\x7c\x55\x72\xf4\x7c\xbb\x98\x67\x1f\x82\xd9\x2e\xe6\xb3\xa2\xc1\x04\x4c\xd7\x10\x09\x53\xc9\x8f\x69\x2f\xbe\xe5\x63\xa0\x4e\xa9\x15\xf8\xe9\x68\x4f\x25\xff\x5d\x7c\xfc\x5e\xbc\x0b\x4d\x0b\xc9\xee\x1c\x72\xa6\x83\x4f\xe8\x53\xc9\x7f\xf8\x50\xa2\xa9\x70\x52\xe7\xa1\xc1\x92\x9f\x2c\x9e\xdb\x10\xd3\x24\xf5\x6c\x4d\xaa\x4b\x83\x27\xab\x51\x74\xc6\x6b\x66\xbd\x4d\x16\x9c\x20\x0d\x0e\xcb\x55\x3f\xe1\xac\x48\x36\x39\xdc\xbe\x07\xaa\x77\x01\xa2\x29\x54\xef\xc8\x41\xc6\x0a\x67\xfd\x2d\xab\x23\xee\x4b\x9e\x87\xa4\x37\x4a\xed\x83\x4f\x24\xab\x10\x2a\x87\xd0\x5a\x92\x3a\x34\x4a\x13\x7d\xb7\x87\xc6\xba\x4b\xf9\x23\xa4\xc0\x59\x44\x57\x72\x4a\x17\x87\x54\x23\xa6\x7e\xe8\x0e\xed\x3a\x72\x05\xdf\xc0\x9d\x36\x5e\xee\x42\x48\x94\x22\xb4\xd9\xc8\x1d\x1e\x1c\x6a\x23\x97\x72\x29\xc0\xb5\x35\xc8\x9b\xdc\x79\x8c\xc9\xc6\x7a\xa9\x89\x38\xd3\x31\x10\x85\x68\x2b\xeb\x4b\x0e\x3e\xf8\x4b\x13\x8e\x94\xc7\x78\x8a\xd3\x73\x4d\x33\x57\x01\x67\xa4\xd0\xa0\xda\xc8\x6f\xe4\xb2\xeb\x37\x75\x8f\x2d\xff\x41\x6c\xfa\xf9\xbc\x79\x80\x08\x13\xa9\x0e\xe4\x69\xd0\x5c\x40\x3a\xda\x36\x31\x8a\x7a\x64\xa0\x8d\x3f\x90\xd4\x2e\x1c\xcd\xde\x41\xc4\x6e\x7c\x38\xc0\x9d\x72\x76\x47\xea\xf0\xe9\x88\xf1\xa2\x6e\xe4\x4a\x2e\x07\xa3\x1b\xfc\x40\x7c\x5b\xa8\x1e\xf0\x5f\x42\x27\x4c\x35\x46\xb5\x92\x9b\x0c\x7d\x6f\xff\x1f\xc8\x14\xf4\x2d\x26\x69\x83\x5a\xcb\xa5\xbc\x19\x6d\x49\xce\x36\x9f\xd5\xe1\xa5\x6a\x3a\x5c\x8b\xe9\x40\xfc\xf9\xcb\xfb\x8f\xfc\x34\xf8\x13\xd0\x81\xd4\xaa\x57\xd6\x60\x5e\x13\x9b\x3d\xc2\x1e\x24\x52\x45\x68\xeb\xa7\x52\xb3\x54\xfa\x47\xfb\xab\x06\x9b\x5f\x13\x24\x7a\x3d\x18\x1f\x09\x2a\x64\x7f\x2e\xe6\x33\xc6\x6a\xb4\x55\x9d\xde\xb0\xf5\xd7\xcb\xf6\xee\x6d\x97\xff\xd7\x62\x3e\x93\x79\x85\x80\xf5\x18\xc5\xde\x1d\xad\xe9\xb2\x67\x2d\x18\x63\x7d\x25\x62\x5f\xe3\x70\x9f\xde\x0e\x05\x85\x1a\x3b\x16\x6a\xd8\x77\x8b\x79\xb1\x0b\xe6\xd2\x0d\x64\xec\x89\x69\x07\x44\x25\x6f\xa1\x42\x31\xec\x28\x91\x42\x55\xe5\xf5\x66\xcd\x55\xe0\x1c\xa1\x6d\x31\x76\x1b\xe3\x51\xf9\xd5\x68\x7d\xc2\xac\x78\x25\x04\x5b\x7b\xc3\x62\x38\x33\x21\x06\xe7\xa4\x2c\x86\xf3\x90\x7a\x85\xe6\x44\x63\xc4\x6a\x7d\x1f\x7c\x1c\x85\x68\x58\xfe\x12\x3b\x17\xf4\xed\x43\xce\xac\xa8\x37\xd3\x1c\xd1\x6d\x4b\xd6\x88\x9d\x58\xf3\xed\x4f\xd8\x84\x78\x61\xc7\xfc\x3f\x17\xaa\xde\x8c\x55\x19\x3a\x33\xbd\xbf\x85\x7c\x6b\xc6\x9e\x1e\x5a\x4f\x8c\xc9\x79\x7a\xfc\xb2\x8c\x1e\xb8\x50\x16\xd0\xb3\x5c\x3a\x79\xbd\x8c\x4b\x77\xab\xe3\xf9\xfe\x58\xa8\x41\x31\x9d\x8c\xfa\x57\xea\x62\xfe\x77\x00\x00\x00\xff\xff\x29\xe4\x6d\xdc\x66\x07\x00\x00")



func init() {
  err := CTX.Err()
  if err != nil {
		panic(err)
	}






  
  err = FS.Mkdir(CTX, "assets/", 0777)
  if err != nil && err != os.ErrExist {
    panic(err)
  }
  




  
  var f webdav.File
  

  
  
  var rb *bytes.Reader
  var r *gzip.Reader
  
  

  
  
  
  rb = bytes.NewReader(FileAssetsGraphsJs)
  r, err = gzip.NewReader(rb)
  if err != nil {
    panic(err)
  }

  err = r.Close()
  if err != nil {
    panic(err)
  }
  
  

  f, err = FS.OpenFile(CTX, "assets/graphs.js", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
  if err != nil {
    panic(err)
  }

  
  
  _, err = io.Copy(f, r)
  if err != nil {
    panic(err)
  }
  
  

  err = f.Close()
  if err != nil {
    panic(err)
  }
  
  
  
  rb = bytes.NewReader(FileAssetsStyleCSS)
  r, err = gzip.NewReader(rb)
  if err != nil {
    panic(err)
  }

  err = r.Close()
  if err != nil {
    panic(err)
  }
  
  

  f, err = FS.OpenFile(CTX, "assets/style.css", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
  if err != nil {
    panic(err)
  }

  
  
  _, err = io.Copy(f, r)
  if err != nil {
    panic(err)
  }
  
  

  err = f.Close()
  if err != nil {
    panic(err)
  }
  
  
  
  rb = bytes.NewReader(FileIndexHTML)
  r, err = gzip.NewReader(rb)
  if err != nil {
    panic(err)
  }

  err = r.Close()
  if err != nil {
    panic(err)
  }
  
  

  f, err = FS.OpenFile(CTX, "index.html", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
  if err != nil {
    panic(err)
  }

  
  
  _, err = io.Copy(f, r)
  if err != nil {
    panic(err)
  }
  
  

  err = f.Close()
  if err != nil {
    panic(err)
  }
  


  Handler = &webdav.Handler{
    FileSystem: FS,
    LockSystem: webdav.NewMemLS(),
  }


}



// Open a file
func (hfs *HTTPFS) Open(path string) (http.File, error) {
  path = hfs.Prefix + path


  f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
  if err != nil {
    return nil, err
  }

  return f, nil
}

// ReadFile is adapTed from ioutil
func ReadFile(path string) ([]byte, error) {
  f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
  if err != nil {
    return nil, err
  }

  buf := bytes.NewBuffer(make([]byte, 0, bytes.MinRead))

  // If the buffer overflows, we will get bytes.ErrTooLarge.
  // Return that as an error. Any other panic remains.
  defer func() {
    e := recover()
    if e == nil {
      return
    }
    if panicErr, ok := e.(error); ok && panicErr == bytes.ErrTooLarge {
      err = panicErr
    } else {
      panic(e)
    }
  }()
  _, err = buf.ReadFrom(f)
  return buf.Bytes(), err
}

// WriteFile is adapTed from ioutil
func WriteFile(filename string, data []byte, perm os.FileMode) error {
  f, err := FS.OpenFile(CTX, filename, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, perm)
  if err != nil {
    return err
  }
  n, err := f.Write(data)
  if err == nil && n < len(data) {
    err = io.ErrShortWrite
  }
  if err1 := f.Close(); err == nil {
    err = err1
  }
  return err
}

// WalkDirs looks for files in the given dir and returns a list of files in it
// usage for all files in the b0x: WalkDirs("", false)
func WalkDirs(name string, includeDirsInList bool, files ...string) ([]string, error) {
	f, err := FS.OpenFile(CTX, name, os.O_RDONLY, 0)
	if err != nil {
		return nil, err
	}

	fileInfos, err := f.Readdir(0)
	if err != nil {
    return nil, err
  }
  
  err = f.Close()
  if err != nil {
		return nil, err
	}

	for _, info := range fileInfos {
		filename := path.Join(name, info.Name())

		if includeDirsInList || !info.IsDir() {
			files = append(files, filename)
		}

		if info.IsDir() {
			files, err = WalkDirs(filename, includeDirsInList, files...)
			if err != nil {
				return nil, err
			}
		}
	}

	return files, nil
}


